name: Static analysis

on:
  push:
    branches: 
      - main
      - DEV
  pull_request:
    branches:
      - main
      - DEV

jobs:

  clang-tidy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-dependencies.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build 
          sudo apt-get install -y clang

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DENABLE_DEBUG=ON

      - name: Build project
        run: cmake --build build

      - name: Clang-tidy Analysis
        run: |
            cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -B build
            clang-tidy -p=./build/compile_commands.json $(find ./sources -name '*.cpp')

  scan-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-dependencies.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build 
          sudo apt-get install -y clang
          sudo apt-get install -y clang-tools

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DENABLE_DEBUG=ON

      - name: Build project
        run: cmake --build build

      - name: Scan-build Analysis
        run: scan-build cmake --build build

      
    
